stages:
  - build
  - build docker

build:
  image: dock.mau.dev/tulir/gomuks-build-docker:linux-amd64
  stage: build
  cache:
    paths:
    - .cache
  before_script:
  - apk add --no-cache git ca-certificates build-base su-exec olm-dev
  - mkdir -p .cache
  - export GOPATH="$CI_PROJECT_DIR/.cache"
  - export GOCACHE="$CI_PROJECT_DIR/.cache/build"
  - export GO_LDFLAGS="-s -w -linkmode external -extldflags -static -X main.Tag=$CI_COMMIT_TAG -X main.Commit=$CI_COMMIT_SHA -X 'main.BuildTime=`date '+%b %_d %Y, %H:%M:%S'`'"
  script:
  - go build -ldflags "$GO_LDFLAGS" -o chatwoot
  artifacts:
    paths:
    - chatwoot

build-docker:
  image: docker:stable
  stage: build docker
  variables:
    DOCKER_ARCH: amd64
  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
  - docker pull $CI_REGISTRY_IMAGE:latest || true
  - docker build --pull --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA-$DOCKER_ARCH . --file Dockerfile.ci
  - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA-$DOCKER_ARCH
  - docker rmi $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA-$DOCKER_ARCH
